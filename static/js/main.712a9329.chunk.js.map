{"version":3,"sources":["components/Badge/index.jsx","assets/icons/remove.svg","components/List/index.jsx","assets/icons/close.svg","components/AddList/index.jsx","assets/icons/add.svg","components/Tasks/AddTasksForm.jsx","components/Tasks/Task.jsx","assets/icons/pencil.svg","components/Tasks/index.jsx","App.js","index.js"],"names":["Badge","color","onClick","className","cn","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","active","id","icon","name","tasks","length","window","confirm","axios","delete","then","removeList","width","height","src","remove","alt","AddList","colors","onAdd","useState","visiblePopup","setVisiblePopup","selectedColor","setSelectedColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","Array","isArray","onClose","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","close","value","onChange","e","preventDefault","target","handleChangeValue","type","placeholder","post","colorId","data","filter","c","listObj","catch","alert","finally","AddTasksForm","list","onAddTask","visibleForm","setFormVisible","toggleFormVisible","disabled","obj","listId","text","completed","console","log","add","Task","task","onEdit","htmlFor","Tasks","onEditTitle","onRemoveTask","onEditTask","withoutEmpty","style","hex","newTitle","prompt","patch","edit","App","lists","setLists","setColors","setActiveItem","history","useHistory","get","taskObj","newList","onEditListTitle","title","location","pathname","split","find","Number","push","newLists","exact","path","taskId","newTaskText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.712a9329.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport './Badge.scss';\n\nconst Badge = ({ color, onClick, className }) => {\n  return (\n    <i onClick={onClick} className={cn('badge', { [`badge--${color}`]: color }, className)}></i>\n  );\n};\n\nexport default Badge;\n","export default __webpack_public_path__ + \"static/media/remove.ec5dc9a8.svg\";","import React from 'react';\nimport axios from 'axios';\nimport cn from 'classnames';\n\nimport Badge from '../Badge';\n\nimport remove from '../../assets/icons/remove.svg';\nimport './List.scss';\n\nconst List = ({ items, isRemovable, onClick, onRemove, onClickItem, activeItem }) => {\n  const removeList = (item) => {\n    if (window.confirm('Вы действительно хотите удалить список?')) {\n      axios.delete(`http://localhost:5000/lists/${item.id}`).then(() => {\n        onRemove(item.id);\n      });\n    }\n  };\n\n  return (\n    <ul onClick={onClick} className='list'>\n      {items.map((item, index) => (\n        <li\n          key={index}\n          className={cn(item.className, {\n            active: item.active ? item.active : activeItem && activeItem.id === item.id,\n          })}\n          onClick={onClickItem ? () => onClickItem(item) : null}>\n          <i>{item.icon ? item.icon : <Badge color={item.color.name} />}</i>\n          <span>\n            {item.name}\n            {item.tasks && ` (${item.tasks.length})`}\n          </span>\n          {isRemovable && (\n            <img\n              onClick={() => removeList(item)}\n              width={16}\n              height={16}\n              className='list__remove-icon'\n              src={remove}\n              alt='Remove icon'\n            />\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default List;\n","export default __webpack_public_path__ + \"static/media/close.96841b05.svg\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport List from '../List';\nimport Badge from '../Badge';\n\nimport close from '../../assets/icons/close.svg';\nimport './AddButtonList.scss';\n\nconst AddList = ({ colors, onAdd }) => {\n  const [visiblePopup, setVisiblePopup] = useState(false);\n  const [selectedColor, setSelectedColor] = useState(3);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (Array.isArray(colors)) {\n      setSelectedColor(colors[0].id);\n    }\n  }, [colors]);\n\n  const handleChangeValue = (e) => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  };\n\n  const onClose = () => {\n    setVisiblePopup(false);\n    setInputValue('');\n    setSelectedColor(colors[0].id);\n  };\n\n  const addList = () => {\n    if (!inputValue) {\n      alert('Введите название списка');\n      return;\n    }\n\n    setIsLoading(true);\n\n    axios\n      .post('http://localhost:5000/lists', {\n        name: inputValue,\n        colorId: selectedColor,\n      })\n      .then(({ data }) => {\n        const color = colors.filter((c) => c.id === selectedColor)[0].name;\n\n        const listObj = {\n          ...data,\n          color: {\n            name: color,\n          },\n        };\n\n        onAdd(listObj);\n        onClose();\n      })\n      .catch(() => {\n        alert('Ошибка при добавлении');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <div className='add-list'>\n      <List\n        onClick={() => setVisiblePopup(!visiblePopup)}\n        items={[\n          {\n            className: 'list__add-button',\n            icon: (\n              <svg\n                width='12'\n                height='12'\n                viewBox='0 0 12 12'\n                fill='none'\n                xmlns='http://www.w3.org/2000/svg'>\n                <path\n                  d='M6 1V11'\n                  stroke='black'\n                  strokeWidth='1.5'\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                />\n                <path\n                  d='M1 6H11'\n                  stroke='black'\n                  strokeWidth='1.5'\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                />\n              </svg>\n            ),\n            name: 'Добавить список',\n          },\n        ]}\n      />\n      {visiblePopup && (\n        <div className='add-list__popup'>\n          <img\n            onClick={onClose}\n            width={18}\n            height={18}\n            src={close}\n            alt='Close button'\n            className='add-list__popup-close-btn'></img>\n          <input\n            value={inputValue}\n            onChange={(e) => handleChangeValue(e)}\n            className='field'\n            type='text'\n            placeholder='Название списка'\n          />\n          <div className='add-list__popup-colors'>\n            {colors.map((color) => (\n              <Badge\n                onClick={() => setSelectedColor(color.id)}\n                key={color.id}\n                color={color.name}\n                className={selectedColor === color.id && 'active'}\n              />\n            ))}\n          </div>\n          <button onClick={addList} className='button'>\n            {isLoading ? 'Добавление...' : 'Добавить'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddList;\n","export default __webpack_public_path__ + \"static/media/add.e5221a32.svg\";","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport add from '../../assets/icons/add.svg';\n\nconst AddTasksForm = ({ list, onAddTask }) => {\n  const [visibleForm, setFormVisible] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState('');\n\n  const toggleFormVisible = () => {\n    setFormVisible(!visibleForm);\n    setInputValue('');\n  };\n\n  const addTask = () => {\n    const obj = {\n      listId: list.id,\n      text: inputValue,\n      completed: false,\n    };\n\n    setIsLoading(true);\n\n    axios\n      .post('http://localhost:5000/tasks', obj)\n      .then(({ data }) => {\n        console.log(data);\n        onAddTask(list.id, data);\n        toggleFormVisible();\n      })\n      .catch(() => {\n        alert('Ошибка при добавлении');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <div className='tasks__form'>\n      {!visibleForm ? (\n        <>\n          <div onClick={toggleFormVisible} className='tasks__form-new'>\n            <img width={20} height={20} src={add} alt='Add icon' />\n            <span>Новая задача</span>\n          </div>\n        </>\n      ) : (\n        <>\n          <input\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            className='field'\n            type='text'\n            placeholder='Текст задачи'\n          />\n          <div className='tasks__form-block'>\n            <button disabled={isLoading} onClick={addTask} className='button'>\n              {isLoading ? 'Добавление...' : 'Добавить задачу'}\n            </button>\n            <button onClick={toggleFormVisible} className='button button--grey'>\n              Отмена\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AddTasksForm;\n","import React from 'react';\n\nconst Task = ({ task, list, onRemove, onEdit }) => {\n  return (\n    <div key={task.id} className='tasks__items-row'>\n      <label className='checkbox'>\n        <input id={`task-${task.id}`} type='checkbox' />\n        <label htmlFor={`task-${task.id}`}>\n          <svg\n            width='11'\n            height='8'\n            viewBox='0 0 11 8'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'>\n            <path\n              d='M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001'\n              stroke='white'\n              strokeWidth='1.5'\n              strokeLinecap='round'\n              strokeLinejoin='round'\n            />\n          </svg>\n        </label>\n      </label>\n      <p>{task.text}</p>\n      <div className='tasks__items-row-actions'>\n        <div onClick={() => onEdit(list.id, { id: task.id, text: task.text })}>\n          <svg\n            width='15'\n            height='15'\n            viewBox='0 0 15 15'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'>\n            <path\n              d='M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z'\n              fill='black'\n            />\n          </svg>\n        </div>\n        <div onClick={() => onRemove(list.id, task.id)}>\n          <svg\n            width='11'\n            height='11'\n            viewBox='0 0 11 11'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'>\n            <path\n              d='M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z'\n              fill='black'\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n","export default __webpack_public_path__ + \"static/media/pencil.62bc8211.svg\";","import React from 'react';\nimport axios from 'axios';\n\nimport AddTasksForm from './AddTasksForm';\nimport Task from './Task';\n\nimport edit from '../../assets/icons/pencil.svg';\n\nimport './Tasks.scss';\n\nconst Tasks = ({ list, onEditTitle, onAddTask, onRemoveTask, onEditTask, withoutEmpty }) => {\n  const editTitle = () => {\n    const newTitle = window.prompt('Новое название списка', list.name);\n\n    if (newTitle) {\n      onEditTitle(list.id, newTitle);\n      axios\n        .patch('http://localhost:5000/lists/' + list.id, {\n          name: newTitle,\n        })\n        .catch(() => {\n          alert('Не удалось обновить название');\n        });\n    }\n  };\n\n  return (\n    <div className='tasks'>\n      <h2 style={{ color: list.color.hex }} className='tasks__title'>\n        {list.name}\n        <img onClick={editTitle} width={16} height={16} src={edit} alt='Edit icon' />\n      </h2>\n\n      <div className='tasks__items'>\n        {!withoutEmpty && !list.tasks.length && <h2>Задачи отсутствуют</h2>}\n        {list.tasks.map((task) => (\n          <Task key={task.id} task={task} list={list} onEdit={onEditTask} onRemove={onRemoveTask} />\n        ))}\n        <AddTasksForm key={list.id} list={list} onAddTask={onAddTask} />\n      </div>\n    </div>\n  );\n};\n\nexport default Tasks;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Route, useHistory } from 'react-router-dom';\n\nimport { List, AddList, Tasks } from './components';\n\nimport './App.scss';\n\nfunction App() {\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n  let history = useHistory();\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/lists?_expand=color&_embed=tasks').then(({ data }) => {\n      setLists(data);\n    });\n    axios.get('http://localhost:5000/colors').then(({ data }) => {\n      setColors(data);\n    });\n  }, []);\n\n  const onAddList = (obj) => {\n    const newList = [...lists, obj];\n    setLists(newList);\n  };\n\n  const onAddTask = (listId, taskObj) => {\n    const newList = lists.map((item) => {\n      if (item.id === listId) {\n        item.tasks = [...item.tasks, taskObj];\n      }\n      return item;\n    });\n    setLists(newList);\n  };\n\n  const onRemoveTask = (listId, taskId) => {\n    if (window.confirm('Вы действительно хотите удалить задачу?')) {\n      const newList = lists.map((item) => {\n        if (item.id === listId) {\n          item.tasks = item.tasks.filter((task) => task.id !== taskId);\n        }\n        return item;\n      });\n      setLists(newList);\n      axios.delete('http://localhost:5000/tasks/' + taskId).catch(() => {\n        alert('Задача не была удалена');\n      });\n    }\n  };\n\n  const onEditTask = (listId, taskObj) => {\n    const newTaskText = window.prompt('Текст задачи', taskObj.text);\n\n    if (!newTaskText) {\n      return;\n    }\n\n    const newList = lists.map((list) => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map((task) => {\n          if (task.id === taskObj.id) {\n            task.text = newTaskText;\n          }\n          return task;\n        });\n      }\n      return list;\n    });\n    setLists(newList);\n    axios.patch('http://localhost:5000/tasks/' + taskObj.id, { text: newTaskText }).catch(() => {\n      alert('Не удалось удалить задачу');\n    });\n  };\n\n  const onEditListTitle = (id, title) => {\n    const newList = lists.map((item) => {\n      if (item.id === id) {\n        item.name = title;\n      }\n      return item;\n    });\n    setLists(newList);\n  };\n\n  useEffect(() => {\n    const listId = history.location.pathname.split(`lists/`)[1];\n    if (lists) {\n      const list = lists.find((list) => list.id === Number(listId));\n      setActiveItem(list);\n    }\n  }, [lists, history.location.pathname]);\n\n  return (\n    <div className='todo'>\n      <div className='todo__sidebar'>\n        <List\n          onClickItem={(list) => history.push(`/`)}\n          items={[\n            {\n              active: !activeItem,\n              icon: (\n                <svg\n                  width='14'\n                  height='12'\n                  viewBox='0 0 14 12'\n                  fill='none'\n                  xmlns='http://www.w3.org/2000/svg'>\n                  <path\n                    d='M10.96 5.10001H5.74001C5.24321 5.10001 5.20001 5.50231 5.20001 6.00001C5.20001 6.49771 5.24321 6.90001 5.74001 6.90001H10.96C11.4568 6.90001 11.5 6.49771 11.5 6.00001C11.5 5.50231 11.4568 5.10001 10.96 5.10001ZM12.76 9.60001H5.74001C5.24321 9.60001 5.20001 10.0023 5.20001 10.5C5.20001 10.9977 5.24321 11.4 5.74001 11.4H12.76C13.2568 11.4 13.3 10.9977 13.3 10.5C13.3 10.0023 13.2568 9.60001 12.76 9.60001ZM5.74001 2.40001H12.76C13.2568 2.40001 13.3 1.99771 13.3 1.50001C13.3 1.00231 13.2568 0.600006 12.76 0.600006H5.74001C5.24321 0.600006 5.20001 1.00231 5.20001 1.50001C5.20001 1.99771 5.24321 2.40001 5.74001 2.40001ZM2.86001 5.10001H1.24001C0.743212 5.10001 0.700012 5.50231 0.700012 6.00001C0.700012 6.49771 0.743212 6.90001 1.24001 6.90001H2.86001C3.35681 6.90001 3.40001 6.49771 3.40001 6.00001C3.40001 5.50231 3.35681 5.10001 2.86001 5.10001ZM2.86001 9.60001H1.24001C0.743212 9.60001 0.700012 10.0023 0.700012 10.5C0.700012 10.9977 0.743212 11.4 1.24001 11.4H2.86001C3.35681 11.4 3.40001 10.9977 3.40001 10.5C3.40001 10.0023 3.35681 9.60001 2.86001 9.60001ZM2.86001 0.600006H1.24001C0.743212 0.600006 0.700012 1.00231 0.700012 1.50001C0.700012 1.99771 0.743212 2.40001 1.24001 2.40001H2.86001C3.35681 2.40001 3.40001 1.99771 3.40001 1.50001C3.40001 1.00231 3.35681 0.600006 2.86001 0.600006Z'\n                    fill='#7C7C7C'\n                  />\n                </svg>\n              ),\n              name: 'Все задачи',\n            },\n          ]}\n        />\n        {lists ? (\n          <List\n            key={lists.id}\n            items={lists}\n            key={lists.id}\n            onRemove={(id) => {\n              const newLists = lists.filter((item) => item.id !== id);\n              setLists(newLists);\n            }}\n            isRemovable\n            onClickItem={(list) => history.push(`/lists/${list.id}`)}\n            activeItem={activeItem}\n          />\n        ) : (\n          'Загрузка...'\n        )}\n        <AddList onAdd={onAddList} colors={colors} />\n      </div>\n      <div className='todo__tasks'>\n        <Route exact path='/'>\n          {lists &&\n            lists.map((list) => (\n              <Tasks\n                key={list.id}\n                onAddTask={onAddTask}\n                list={list}\n                onEditTitle={onEditListTitle}\n                withoutEmpty\n              />\n            ))}\n        </Route>\n        <Route path='/lists/:id'>\n          {lists && activeItem && (\n            <Tasks\n              onAddTask={onAddTask}\n              list={activeItem}\n              onEditTitle={onEditListTitle}\n              onRemoveTask={onRemoveTask}\n              onEditTask={onEditTask}\n            />\n          )}\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}